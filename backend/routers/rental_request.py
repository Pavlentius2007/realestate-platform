from fastapi import APIRouter, Form, Depends
from backend.routers.user_tools import notify_telegram
# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —á–µ—Ä–µ–∑ ModernI18nMiddleware
from fastapi.responses import HTMLResponse
from fastapi import Request
from backend.config.templates import templates
from sqlalchemy.orm import Session
from backend.models.user import User
from backend.database import SessionLocal, get_db
from typing import Optional

router = APIRouter()

@router.post("/rental-request")
def handle_rental_request(
    name: str = Form(...), 
    phone: str = Form(...), 
    whatsapp: str = Form(""),
    telegram: str = Form(""),
    property_name: str = Form(""),
    check_in_date: str = Form(""),
    check_out_date: str = Form(""),
    guests: str = Form(""),
    message: str = Form(""),
    db: Session = Depends(get_db)
):
    from datetime import datetime
    
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª–µ–π)
        user = User(
            full_name=name,  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: name -> full_name
            phone=phone if phone else None,
            whatsapp_number=whatsapp if whatsapp else None,  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: whatsapp -> whatsapp_number
            telegram_id=telegram if telegram else None,  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: telegram -> telegram_id
            source="rental_request",
            is_active=True  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: "true" -> True (–±—É–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)
        )
        db.add(user)
        db.commit()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        text = (
            f"üèñÔ∏è –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ê–†–ï–ù–î–£\n\n"
            f"üë§ –ö–ª–∏–µ–Ω—Ç: {name}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
        )
        
        if whatsapp:
            text += f"üì± WhatsApp: {whatsapp}\n"
        if telegram:
            text += f"‚úàÔ∏è Telegram: {telegram}\n"
        
        if property_name:
            text += f"üè† –û–±—ä–µ–∫—Ç: {property_name}\n"
        
        if check_in_date and check_out_date:
            text += f"üìÖ –î–∞—Ç—ã: {check_in_date} - {check_out_date}\n"
        
        if guests:
            text += f"üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π: {guests}\n"
        
        if message:
            text += f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {message}\n"
        
        text += f"\nüïí –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        text += f"\nüìä ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id}"
        
        notify_telegram(text)
        
        return {"message": "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!"}
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –∞—Ä–µ–Ω–¥—É: {e}")
        db.rollback()
        return {"message": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏", "error": str(e)}

@router.get("/rental-request", response_class=HTMLResponse)
def rental_request_form(request: Request):
    # –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ –¥–æ—Å—Ç—É–ø–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ ModernI18nMiddleware
    return templates.TemplateResponse("rental_request.html", {"request": request})

@router.post("/auth/telegram/callback", response_class=HTMLResponse)
def telegram_callback(request: Request, telegram_id: str = Form(...), full_name: Optional[str] = Form(None)):
    db: Session = SessionLocal()
    user = db.query(User).filter(User.telegram_id == telegram_id).first()
    if user:
        user.full_name = full_name or user.full_name
    else:
        user = User(telegram_id=telegram_id, full_name=full_name, source="Telegram")
        db.add(user)
    db.commit()
    db.close()
    return templates.TemplateResponse("thank_you.html", {"request": request, "message": "–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ Telegram!"})

@router.post("/auth/whatsapp/submit", response_class=HTMLResponse)
def whatsapp_submit(request: Request, whatsapp_number: str = Form(...), full_name: Optional[str] = Form(None)):
    db: Session = SessionLocal()
    user = db.query(User).filter(User.whatsapp_number == whatsapp_number).first()
    if user:
        user.full_name = full_name or user.full_name
    else:
        user = User(whatsapp_number=whatsapp_number, full_name=full_name, source="WhatsApp")
        db.add(user)
    db.commit()
    db.close()
    return templates.TemplateResponse("thank_you.html", {"request": request, "message": "–í–∞—à WhatsApp —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!"})
