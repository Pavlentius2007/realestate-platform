/*!
 * Bootstrap v5.3.0 (https://getbootstrap.com/)
 * Copyright 2011-2023 The Bootstrap Authors
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 */
// Minimal Bootstrap stub for development
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.bootstrap = {}));
})(this, (function (exports) { 'use strict';

  // Modal functionality
  class Modal {
    constructor(element, options = {}) {
      this.element = element;
      this.options = options;
    }
    
    show() {
      if (this.element) {
        this.element.classList.add('show');
        this.element.style.display = 'block';
        document.body.classList.add('modal-open');
      }
    }
    
    hide() {
      if (this.element) {
        this.element.classList.remove('show');
        this.element.style.display = 'none';
        document.body.classList.remove('modal-open');
      }
    }
    
    toggle() {
      if (this.element.classList.contains('show')) {
        this.hide();
      } else {
        this.show();
      }
    }
    
    static getInstance(element) {
      return element._bsModal || new Modal(element);
    }
  }
  
  // Dropdown functionality
  class Dropdown {
    constructor(element, options = {}) {
      this.element = element;
      this.options = options;
    }
    
    show() {
      const menu = this.element.nextElementSibling;
      if (menu) {
        menu.classList.add('show');
      }
    }
    
    hide() {
      const menu = this.element.nextElementSibling;
      if (menu) {
        menu.classList.remove('show');
      }
    }
    
    toggle() {
      const menu = this.element.nextElementSibling;
      if (menu) {
        menu.classList.toggle('show');
      }
    }
    
    static getInstance(element) {
      return element._bsDropdown || new Dropdown(element);
    }
  }
  
  // Collapse functionality
  class Collapse {
    constructor(element, options = {}) {
      this.element = element;
      this.options = options;
    }
    
    show() {
      if (this.element) {
        this.element.classList.add('show');
      }
    }
    
    hide() {
      if (this.element) {
        this.element.classList.remove('show');
      }
    }
    
    toggle() {
      if (this.element) {
        this.element.classList.toggle('show');
      }
    }
    
    static getInstance(element) {
      return element._bsCollapse || new Collapse(element);
    }
  }
  
  // Auto-init dropdowns
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize dropdowns
    document.querySelectorAll('[data-bs-toggle="dropdown"]').forEach(function(element) {
      element.addEventListener('click', function(e) {
        e.preventDefault();
        const dropdown = Dropdown.getInstance(this);
        dropdown.toggle();
      });
    });
    
    // Initialize modals
    document.querySelectorAll('[data-bs-toggle="modal"]').forEach(function(element) {
      element.addEventListener('click', function(e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('data-bs-target'));
        if (target) {
          const modal = Modal.getInstance(target);
          modal.show();
        }
      });
    });
    
    // Close modals
    document.querySelectorAll('[data-bs-dismiss="modal"]').forEach(function(element) {
      element.addEventListener('click', function(e) {
        e.preventDefault();
        const modal = this.closest('.modal');
        if (modal) {
          Modal.getInstance(modal).hide();
        }
      });
    });
    
    console.log("Bootstrap stub loaded");
  });
  
  // Export
  exports.Modal = Modal;
  exports.Dropdown = Dropdown;
  exports.Collapse = Collapse;
  
  Object.defineProperty(exports, '__esModule', { value: true });

})); 