/*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */
// Minimal jQuery stub for development
(function(global, factory) {
    "use strict";
    if (typeof module === "object" && typeof module.exports === "object") {
        module.exports = global.document ?
            factory(global, true) :
            function(w) {
                if (!w.document) {
                    throw new Error("jQuery requires a window with a document");
                }
                return factory(w);
            };
    } else {
        factory(global);
    }
})(typeof window !== "undefined" ? window : this, function(window, noGlobal) {
    "use strict";
  
  var jQuery = function(selector, context) {
    return new jQuery.fn.init(selector, context);
  };
  
  jQuery.fn = jQuery.prototype = {
        jquery: "3.6.0",
    constructor: jQuery,
    length: 0,
        
        init: function(selector, context) {
            if (!selector) {
                return this;
            }
            
            if (typeof selector === "string") {
                var elements = document.querySelectorAll(selector);
                for (var i = 0; i < elements.length; i++) {
                    this[i] = elements[i];
                }
                this.length = elements.length;
            } else if (selector.nodeType) {
                this[0] = selector;
                this.length = 1;
            }
            
            return this;
        },
        
        ready: function(fn) {
            if (document.readyState === "loading") {
                document.addEventListener("DOMContentLoaded", fn);
            } else {
                fn();
            }
            return this;
        },
        
        on: function(event, handler) {
            for (var i = 0; i < this.length; i++) {
                this[i].addEventListener(event, handler);
            }
            return this;
        },
        
        click: function(handler) {
            return this.on("click", handler);
        },
        
        addClass: function(className) {
            for (var i = 0; i < this.length; i++) {
                this[i].classList.add(className);
            }
            return this;
        },
        
        removeClass: function(className) {
            for (var i = 0; i < this.length; i++) {
                this[i].classList.remove(className);
            }
            return this;
        },
        
        toggleClass: function(className) {
            for (var i = 0; i < this.length; i++) {
                this[i].classList.toggle(className);
            }
            return this;
        },
        
        hide: function() {
            for (var i = 0; i < this.length; i++) {
                this[i].style.display = "none";
            }
            return this;
        },
        
        show: function() {
            for (var i = 0; i < this.length; i++) {
                this[i].style.display = "";
            }
            return this;
        }
    };
    
    jQuery.fn.init.prototype = jQuery.fn;
    
    // Global jQuery
    if (typeof noGlobal === "undefined") {
        window.jQuery = window.$ = jQuery;
    }
    
      return jQuery;
    });
  
// Document ready shorthand
$(document).ready(function() {
    console.log("jQuery stub loaded");
}); 